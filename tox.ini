# -*- encoding: utf-8 -*-
# ======================================================================================
# Copyright and other protections apply. Please see the accompanying LICENSE file for
# rights and restrictions governing use of this software. All rights not expressly
# waived or licensed are reserved. If that file is missing or appears to be modified
# from its original, then please contact the author before viewing or using this
# software in any capacity.
# ======================================================================================

[tox]  # -------------------------------------------------------------------------------

envlist = check, lint, mypy, py{36,37,38,39,py36,py37}
skip_missing_interpreters = true

[travis]  # ----------------------------------------------------------------------------

python =
    3.6: py36, check, lint, mypy
    3.7: py37, lint, mypy
    3.8: py38, lint, mypy
    3.9: py39, lint, mypy
    pypy3.6: pypy36, lint, mypy
    pypy3.7: pypy37, lint, mypy

[testreqs]  # --------------------------------------------------------------------------

deps =

[testenv]  # ---------------------------------------------------------------------------

commands =
    coverage run --append -m py.test {posargs}

deps =
    coverage
    pytest
    {[testreqs]deps}

passenv =
    COVERAGE_PROCESS_START
    LOG_FMT
    LOG_LVL

setenv =
    PYTHONWARNINGS = all

[testenv:check]  # ---------------------------------------------------------------------

basepython = {env:PYTHON:python}

commands =
    # rm -frv docs/_build docs/_static docs/modules.rst docs/_skel.rst docs/_skel.*.rst
    # sphinx-apidoc --output-dir docs --separate _skel
    mkdir -p docs/_static
    make -C docs html
    python setup.py sdist
    twine check dist/*
    {toxinidir}/helpers/checkmodified.sh

deps =
    docutils
    sphinx
    twine
    # This probably breaks on Windows. See
    # <https://github.com/tox-dev/tox/issues/384>.
    -rdocs/requirements.txt

setenv =
    PYTHONWARNINGS =

skip_install = true

whitelist_externals =
    make
    mkdir
    rm

[testenv:lint]  # ----------------------------------------------------------------------

basepython = {env:PYTHON:python}

commands =
    -coverage report
    -coverage html
    flake8 _skel tests setup.py
    pylint _skel tests setup.py
    black --check _skel tests setup.py

deps =
    black
    coverage
    flake8
    pylint >= 1.7.0
    {[testreqs]deps}

setenv =
    PYTHONWARNINGS =

usedevelop = true

[testenv:mypy]  # ----------------------------------------------------------------------

basepython = {env:PYTHON:python}

commands =
    mypy --follow-imports=skip --ignore-missing-imports --no-implicit-optional --strict-optional --warn-redundant-casts --warn-unused-configs _skel tests setup.py

deps =
    mypy

usedevelop = true

[flake8]  # ----------------------------------------------------------------------------

# See
# <https://pycodestyle.readthedocs.io/en/latest/intro.html#error-codes>
# and <https://flake8.readthedocs.io/en/latest/user/error-codes.html>
ignore =
    E124,  # closing bracket does not match visual indentation
    E128,  # continuation line under-indented for visual indent
    E203,  # whitespace before ':'
    E301,  # expected 1 blank line, found ...
    E302,  # expected 2 blank lines, found ...
    E305,  # expected 2 blank lines after end of function or class
    E402,  # module level import not at top of file
    E501,  # line too long (... > ... characters)
    E701,  # multiple statements on one line (colon)
    E704,  # multiple statements on one line (def)
    W503   # line break occurred before a binary operator

exclude =
    .git,
    __pycache__,
    docs/conf.py

[pytest]  # ----------------------------------------------------------------------------

addopts = --doctest-modules
doctest_optionflags = ELLIPSIS IGNORE_EXCEPTION_DETAIL NORMALIZE_WHITESPACE NUMBER
